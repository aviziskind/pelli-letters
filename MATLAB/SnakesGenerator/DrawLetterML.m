function signal=DrawLetterML(t,letter)% Draws a snake in the shape of a letter. As we trace the stroke of the letter,% we draw a mark every so often. Each mark is a gabor patch. They add.% Denis Pelli & Noah Raizman 17 July 1998% the basic turtle statet.position=[14 14];t.position=[10 4]; % perfect for tiny gabors (0.1 deg)t.position=[0 0];t.position=[t.signalSize-t.signalCoreSize,t.signalSize-t.signalCoreSize]/2;t.nextMark=1;if t.randSpacing	t.inkLength=floor(rand(1)*t.markSpacing/2);else	t.inkLength=0;endt.direction=[0,1];t.ink=1;t.print=0;	% each routine prints on the console each time it's calledif t.print	fprintf('DRAWLETTER "%c"\n',letter);endt.show=t.animate;	% show letter onscreen once it's computedt.newLetter=1;if t.show	r=[0 0 t.signalSize t.signalSize];	t.window=SCREEN(0,'OpenWindow',[],r);endt.canvasSize=t.signalSize+100;r=[0,0,t.signalCoreSize,t.signalCoreSize];canvasRect=[0,0,t.canvasSize,t.canvasSize];r=CenterRect(r,canvasRect);t.canvasX0=r(RectLeft);t.canvasY0=r(RectTop); % actually the bottom, using the convention that y increases upward	% Begin at the lower left corner of a 100x100 bounding box that contains the core of the strokes.switch letter		case 'IN';		% Start at the bottom, draw left side;		t.ink=0;		t=Forward(t,50);		t=Turn(t,90);		t=Forward(t,10);		t.ink=1;		t=Forward(t,90);% 		t=Turn(t,180);% 		t.ink=0;% 		t=Forward(t,200);% 		t=Turn(t,180);% 		t.ink=1;% 		t=Forward(t,100);case 'OUT';		% Start at the bottom, draw left side;		t.ink=0;		t=Forward(t,50);		t=Turn(t,90);		t=Forward(t,10);		t.ink=1;		t=Forward(t,40);		t.ink=0;		t=Forward(t,80);		t=Turn(t,180);		t.ink=1;		t=Forward(t,80);% 	case '--2';% 		% Start at the bottom, draw left side;% 		t.ink=0;% 		t=Turn(t,90);% 		t=Forward(t,50);% 		t=Turn(t,-90);% 		t.ink=1;% 		t=Forward(t,100);% 		t=Turn(t,180);% 		t.ink=0;% 		t=Forward(t,100);% 		t=Turn(t,180);% 		t.ink=1;% 		t=Forward(t,100);	% 		% 	case 'up';% 		t.ink=0;% 		%t=Forward(t,25);% 		t=Turn(t,90);% 		t=Forward(t,50);% 		t=Turn(t,-90);% 		t=Forward(t,96);% 		t.ink=1;% 		t=Forward(t,4);% 		% 	case 'down';% 		t.ink=0;% 		%t=Forward(t,25);% 		t=Turn(t,90);% 		t=Forward(t,50);% 		t.ink=1;% 		t=Turn(t,-90);% 		t=Forward(t,10);% % 		t.ink=0;% % 		t=Forward(t,6);% % 		t=Turn(t,-90);% % 		t=Forward(t,2);% % 		t=Turn(t,180);% % 		t.ink=1;% % 		t=Forward(t,8);	% case 'N';%  	 	t.ink=0;% 		t=Turn(t,90);% 		t=Forward(t,48);% 		t.ink=1;% 		t=Forward(t,2);% 		t.ink=0;% 		t=Turn(t,180);% 		t=Forward(t,96);% 		t=Turn(t,-90);% 		t=Forward(t,100);% 		t=Turn(t,-90);% 		t.ink=1;% 		t=Forward(t,96);									otherwise		error(sprintf('The letter "%c" (%d) is not implemented.',letter,letter));endif t.print	fprintf('\n');endglobal canvassignal=canvas(t.canvasX0+(1:t.signalSize),t.canvasY0+(1:t.signalSize));signal=flipud(signal');if t.show	s=signal;	%fprintf('signal max %.1f min %.1f\n',max(max(s)),min(min(s)));	SCREEN(t.window,'PutImage',s*127/3+128)endreturn