function signal=Blanck(t,letter)%clear allt.position=[14 14];t.position=[10 4]; % perfect for tiny gabors (0.1 deg)t.position=[0 0];t.position=[t.signalSize-t.signalCoreSize,t.signalSize-t.signalCoreSize]/2;%t.signalSize==0;%t.signalCoreSize==1;t.nextMark=0;if t.randSpacing	t.inkLength=floor(rand(1)*t.markSpacing/2);else	t.inkLength=0;endt.direction=[0,1];t.ink=0;t.print=0;	% each routine prints on the console each time it's calledif t.print	fprintf('DRAWLETTER "%c"\n',letter);endt.show=t.animate;	% show letter onscreen once it's computed%t.animate==0;	t.newLetter=1;if t.show	r=[0 0 t.signalSize t.signalSize];	t.window=SCREEN(0,'OpenWindow',[],r);endt.canvasSize=100;t.signalSize=100;r=[0,0,t.signalCoreSize,t.signalCoreSize];canvasRect=[0,0,t.canvasSize,t.canvasSize];r=CenterRect(r,canvasRect);t.canvasX0=r(RectLeft);t.canvasY0=r(RectTop); % actually the bottom, using the convention that y increases upward	% Begin at the lower left corner of a 100x100 bounding box that contains the core of the strokes.switch lettercase 'N'; 	 	t.ink=0;		t=Turn(t,90);		t=Forward(t,100);% 		t.ink=1;% 		t=Forward(t,2);% 		t.ink=0;% 		t=Turn(t,180);% 		t=Forward(t,96);% 		t=Turn(t,-90);% 		t=Forward(t,100);% 		t=Turn(t,-90);% 		t.ink=1;% 		t=Forward(t,96);									otherwise		error(sprintf('The letter "%c" (%d) is not implemented.',letter,letter));endif t.print	fprintf('\n');endglobal canvassignal=canvas(t.canvasX0+(1:t.signalSize),t.canvasY0+(1:t.signalSize));signal=flipud(signal');if t.show	s=signal;	%fprintf('signal max %.1f min %.1f\n',max(max(s)),min(min(s)));	SCREEN(t.window,'PutImage',s*127/3+128)endreturn