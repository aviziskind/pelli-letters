% function CreateAlphabet% Set can be 'ISO', 'ORTHO','ALTERNATE', or 'MIX';t.gaborSet=gaborSet;t.markSpacing=markSpacing;t.randSpacing=randSpacing;t.gaborPhase=gaborPhase;t.alternate=0;t.signalCoreDeg=signalCoreDeg;t.signalCoreSize=signalCoreSize; % 100t.pixDeg=t.signalCoreDeg/t.signalCoreSize;% used only within gabor subroutine, inside Mark.mt.animate=0;t.gaborOrientation=(0)*pi/180; % number in () is absolute deviation from path of every Gabor.t.GaborRandomDev=60; % random deviation from t.gaborOrientation, in max. degrees.t.spaceConstantDegX=spaceConstantDegX; % X is direction along which the grating changes fastest.t.spaceConstantDegY=spaceConstantDegY; % Y is the direction along which the grating doesn't change.t.gaborSize=5*max(t.spaceConstantDegX,t.spaceConstantDegY)/t.pixDeg;t.signalSize=ceil(t.signalCoreSize+t.gaborSize);t.f=f; % spatial frequency of Gabor in c/deg.signal1=DrawLetter(t,'C');signal2=DrawLetter(t,'D');signal3=DrawLetter(t,'H');signal4=DrawLetter(t,'K');signal5=DrawLetter(t,'N');signal6=DrawLetter(t,'O');signal7=DrawLetter(t,'R');signal8=DrawLetter(t,'S');signal9=DrawLetter(t,'V'); signal10=DrawLetter(t,'Z');turtle=t;clear tsave snakes turtle signal1 signal2 signal3 signal4 signal5 signal6 signal7 signal8 signal9 signal10;