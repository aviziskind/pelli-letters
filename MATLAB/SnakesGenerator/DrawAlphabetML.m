% function CreateAlphabet% Set can be 'ISO', 'ORTHO','ALTERNATE', or 'MIX';t.gaborSet=gaborSet;t.markSpacing=markSpacing;t.randSpacing=randSpacing;t.gaborPhase=gaborPhase;t.alternate=0;t.signalCoreDeg=signalCoreDeg;t.signalCoreSize=100;t.pixDeg=t.signalCoreDeg/t.signalCoreSize;% used only within gabor subroutine, inside Mark.mt.animate=0;t.gaborOrientation=(0)*pi/180; % number in () is absolute deviation from path of every Gabor.t.GaborRandomDev=60; % random deviation from t.gaborOrientation, in max. degrees.t.spaceConstantDegX=spaceConstantDegX; % X is direction along which the grating changes fastest.t.spaceConstantDegY=spaceConstantDegY; % Y is the direction along which the grating doesn't change.t.gaborSize=5*max(t.spaceConstantDegX,t.spaceConstantDegY)/t.pixDeg;t.signalSize=ceil(t.signalCoreSize+t.gaborSize);t.f=f; % spatial frequency of Gabor in c/deg.signal1=DrawLetterML(t,'IN');signal2=DrawLetterML(t,'OUT');% signal2=DrawLetterML(t,'up');% signal3=DrawLetterML(t,'down');% signal4=Blanck(t,'N');turtle=t;clear tsave snakes turtle signal1 signal2;